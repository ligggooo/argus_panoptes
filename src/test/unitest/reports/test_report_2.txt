对版本
    d43408b07a1c5541b72a940fcc73c4cc610f6f66
进行性能分析

测试环境：
    使用flask自带server,单核单线程
    使用redis获取全局唯一id
    postgresql部署在很远的一台物理机

测试一:
    基准测试 flask hello world  0.006s qps 150左右
        并发数    1  0.0023  qps   434.97
        并发数   10  0.013   qps   745.5
        并发数   30  0.039   qps   778.35
        并发数   50  0.066   qps   763.76

    去掉web，直接访问controller
        并发数    1  0.13  qps   6.9     有随时间逐渐增加的现象
        并发数量 10  0.18  qps   55
        并发数量 30  0.8   qps   37.5
        并发数量 50  1.57  qps   31.8

    结论：controller耗费了相当多时间 95% 以上

测试二:
    去掉数据库写入语句，直接访问controller
        并发数    1  0.032  qps   30.96
        并发数量 10  0.34   qps   29
        并发数量 30  0.38   qps   79
        并发数量 50  0.43   qps   115.8

    结论： qps主要受到数据库写入语句的影响

测试三:
    tree cache update 加锁:
        并发数    1  0.032      qps   31.3
        并发数量 10  0.33       qps   30.1
        并发数量 30  0.3-1.2    qps   43    越跑越慢
        并发数量 50  0.3-2.0    qps   47    越跑越慢

    tree cache + tree update 双检锁:
        并发数    1  0.032      qps   30.7
        并发数量 10  0.35       qps   28
        并发数量 30  0.3-1.0    qps   56    越跑越慢
        并发数量 50  0.3-1.9    qps   92    越跑越慢

    将状态混合从tree cache update 中移到 输出函数中：
        并发数    1  0.00050      qps   2005.34
        并发数量 10  0.00258      qps   3961.78
        并发数量 30  0.00198      qps   15176
        并发数量                        非常快了

